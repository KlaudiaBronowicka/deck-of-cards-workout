<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:rf="clr-namespace:RedCorners.Forms;assembly=RedCorners.Forms"
             mc:Ignorable="d"
             x:Class="DeckOfCards.Views.WorkoutPage"
             xmlns:converters="clr-namespace:DeckOfCards.Converters"
             xmlns:triggers="clr-namespace:DeckOfCards.Triggers"
             xmlns:utility="clr-namespace:DeckOfCards.Utility;assembly=DeckOfCards"
             xmlns:local="clr-namespace:DeckOfCards;assembly=DeckOfCards"
             utility:ViewModelLocator.AutoWireViewModel="True"
              xmlns:skia="clr-namespace:SkiaSharp;assembly=SkiaSharp"
             xmlns:skiaforms="clr-namespace:SkiaSharp.Views.Forms;assembly=SkiaSharp.Views.Forms"
                       
             >
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:SecondsToTimeConverter x:Key="timeConvert" />
            <converters:CardNumberConverter x:Key="cardNumberConvert" />
            <converters:CardSymbolToImageConverter x:Key="cardSymbolImageConvert" />
            <converters:BoolToValueConverter x:Key="gamePausedTextConvert" x:TypeArguments="x:String" TrueValue="Resume" FalseValue="Pause"  />
            <converters:BoolToValueConverter x:Key="gamePausedOpacityConvert" x:TypeArguments="x:String" TrueValue="0.5" FalseValue="1"  />
            <converters:GameStateToTextConverter x:Key="gameStateLabelTextConvert" x:TypeArguments="x:String" Default="Press to start" GamePaused="Press to resume" GameRunning="" />
            <converters:InverseBoolConverter x:Key="inverseBoolConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid
            
            VerticalOptions="FillAndExpand"
            HorizontalOptions="FillAndExpand">
             <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

             <skiaforms:SKCanvasView
                 Grid.Row="0"
                 Grid.Column="0"
                 Grid.RowSpan="5"

                 x:Name="canvasView"
                                    PaintSurface="OnCanvasViewPaintSurface" />
            <Grid Grid.Row="0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label
                    HorizontalTextAlignment="Start"
                    Margin="20, 20, 0, 0"
                    Text="{Binding CurrentCardIndex, Converter={StaticResource cardNumberConvert}}"
                    FontSize="28"
                    TextColor="{StaticResource Light}">
                    
                </Label>
                <Label
                    Margin="0, 20, 20, 0"
                    HorizontalTextAlignment="End"
                    Grid.Column="1"
                    Text="{Binding Seconds, Converter={StaticResource timeConvert}}"
                    FontSize="28"
                    TextColor="{StaticResource Light}">
                </Label>
            </Grid>
            <rf:Frame2
                x:Name="CardView"
                   Grid.Row="1"
                   HasShadow="True"
                   ShadowRadius="24"
                   ShadowColor="Black"
                   BackgroundColor="{StaticResource Light}"
                   CornerRadius="16"
                   Margin="40"
                   Padding="0">
                <rf:Frame2.GestureRecognizers>
                    <TapGestureRecognizer Tapped="CardTappedEvent"/>
                    <SwipeGestureRecognizer Direction="Left" Swiped="CardSwipedEvent"/>
                </rf:Frame2.GestureRecognizers>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="300"/>
                        <RowDefinition Height="70"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="70" />
                    </Grid.ColumnDefinitions>
                    <Frame
                        x:Name="cardCoverImage"
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.RowSpan="3"
                        Grid.ColumnSpan="3"
                        BackgroundColor="{StaticResource Light}"
                        CornerRadius="12"
                        Margin="10"
                        Padding="0"
                        HasShadow="False"
                         IsVisible="{Binding IsGameRunning, Converter={StaticResource inverseBoolConverter}}">
                     <Image
                        Aspect="AspectFill"
                        Source="card.png"/>
                    </Frame>

                    <Image
                        x:Name="TopLeftCardSymbol"
                        WidthRequest="50"
                        HeightRequest="50"
                        Grid.Row="0"
                        Grid.Column="0"
                        Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}"
                        Margin="20, 20, 0, 0"
                        >
                        <!-- Opacity="{Binding IsGamePaused, Converter={StaticResource gamePausedOpacityConvert}}" -->
                    </Image>
                    <Image
                        x:Name="TopRightCardSymbol"
                        WidthRequest="50"
                        HeightRequest="50"
                        Grid.Row="0"
                        Grid.Column="2"
                        Margin="0, 20, 20, 0"
                        Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}">
                        <!-- Opacity="{Binding IsGamePaused, Converter={StaticResource gamePausedOpacityConvert}}" -->
                    </Image>
                    <Image
                        x:Name="BottomLeftCardSymbol"
                        WidthRequest="50"
                        HeightRequest="50"
                        Grid.Row="2"
                        Grid.Column="0"
                        Margin="20, 0, 0, 20"
                        Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}">
                        <!-- Opacity="{Binding IsGamePaused, Converter={StaticResource gamePausedOpacityConvert}}" -->
                    </Image>
                    <Image
                        x:Name="BottomRightCardSymbol"
                        WidthRequest="50"
                        HeightRequest="50"
                        Grid.Row="2"
                        Grid.Column="2"
                        Margin="0, 0, 20, 20"
                        Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}">
                        <!-- Opacity="{Binding IsGamePaused, Converter={StaticResource gamePausedOpacityConvert}}" -->
                    </Image>
                    <Label
                        x:Name="ExerciseLabel"
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalOptions="Center"
                        VerticalOptions="Center"
                        FontSize="36"
                        Text="{Binding CurrentCard.Exercise}">
                        <!-- Opacity="{Binding IsGamePaused, Converter={StaticResource inverseBoolConverter}}"> -->
                    </Label>
                     <Label
                        x:Name="GameResumeLabel"
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalOptions="Center"
                        VerticalOptions="Center"
                        FontSize="36"
                         Opacity="0"
                        Text="Press to resume">
                        <!-- Opacity="{Binding IsGamePaused, Converter={StaticResource inverseBoolConverter}}"> -->
                    </Label>
                </Grid>
            </rf:Frame2>
            <Button
                x:Name="FinishButton"
                Grid.Row="2"
                Text="Finish Workout"
                HorizontalOptions="FillAndExpand"
                Margin="40, 10, 40, 10"
                Opacity="0"
                Command="{Binding FinishButtonPressedCommand}"
                IsEnabled="{Binding IsGamePaused}"
                PropertyChanged="FinishButtonPropertyChanged"/>

            <Button
                x:Name="PauseButton"
                Grid.Row="2"
                Text="{Binding IsGamePaused, Converter={StaticResource gamePausedTextConvert}}"
                HorizontalOptions="FillAndExpand"
                Margin="40, 10, 40, 10"
                Command="{Binding PauseButtonPressedCommand}"
                IsEnabled="{Binding IsGameRunning}"
                PropertyChanged="PauseButtonPropertyChanged"
                
                />


                <!--
                <Button.Triggers>
                    <Trigger TargetType="Button"
                             Property="IsEnabled"
                             Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </Trigger>
                </Button.Triggers>
                -->
        </Grid>
    </ContentPage.Content>
</ContentPage>