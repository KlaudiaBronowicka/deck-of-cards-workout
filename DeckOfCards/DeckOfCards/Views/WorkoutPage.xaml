<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:rf="clr-namespace:RedCorners.Forms;assembly=RedCorners.Forms"
             mc:Ignorable="d"
             x:Class="DeckOfCards.Views.WorkoutPage"
             xmlns:converters="clr-namespace:DeckOfCards.Converters"
             xmlns:utility="clr-namespace:DeckOfCards.Utility;assembly=DeckOfCards"
             utility:ViewModelLocator.AutoWireViewModel="True"
             >
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:SecondsToTimeConverter x:Key="timeConvert" />
            <converters:CardNumberConverter x:Key="cardNumberConvert" />
            <converters:CardSymbolToImageConverter x:Key="cardSymbolImageConvert" />
            <converters:BoolToValueConverter x:Key="gamePausedTextConvert" x:TypeArguments="x:String" TrueValue="Resume" FalseValue="Pause"  />
            <converters:BoolToValueConverter x:Key="gamePausedOpacityConvert" x:TypeArguments="x:String" TrueValue="0.5" FalseValue="1"  />
            <converters:GameStateToTextConverter x:Key="gameStateLabelTextConvert" x:TypeArguments="x:String" Default="Press to start" GamePaused="Press to resume" GameRunning="" />
            <converters:InverseBoolConverter x:Key="inverseBoolConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid
            VerticalOptions="FillAndExpand"
            HorizontalOptions="FillAndExpand"
            Padding="20">
             <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label
                    HorizontalTextAlignment="Start"
                    Text="{Binding CurrentCardIndex, Converter={StaticResource cardNumberConvert}}"
                    FontSize="28"
                    TextColor="{StaticResource Light}">
                    
                </Label>
                <Label
                    HorizontalTextAlignment="End"
                    Grid.Column="1"
                    Text="{Binding Seconds, Converter={StaticResource timeConvert}}"
                    FontSize="28"
                    TextColor="{StaticResource Light}">
                </Label>
            </Grid>
            <rf:Frame2
                   Grid.Row="1"
                   HasShadow="True"
                   ShadowRadius="24"
                   ShadowColor="Black"
                   BackgroundColor="{StaticResource Light}"
                   CornerRadius="16"
                   Margin="20">
                <rf:Frame2.GestureRecognizers>
                    <TapGestureRecognizer Tapped="CardTappedEvent"/>
                </rf:Frame2.GestureRecognizers>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="300"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Image
                        WidthRequest="50"
                        HeightRequest="50"
                        Grid.Row="0"
                        Grid.Column="0"
                        Opacity="{Binding IsGamePaused, Converter={StaticResource gamePausedOpacityConvert}}"
                        Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}">
                    </Image>
                    <Image
                        WidthRequest="50"
                        HeightRequest="50"
                        Grid.Row="0"
                        Grid.Column="2"
                        Opacity="{Binding IsGamePaused, Converter={StaticResource gamePausedOpacityConvert}}"
                        Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}">
                    </Image>
                    <Image
                        WidthRequest="50"
                        HeightRequest="50"
                        Grid.Row="2"
                        Grid.Column="0"
                        Opacity="{Binding IsGamePaused, Converter={StaticResource gamePausedOpacityConvert}}"
                        Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}">
                    </Image>
                    <Image
                        WidthRequest="50"
                        HeightRequest="50"
                        Grid.Row="2"
                        Grid.Column="2"
                        Opacity="{Binding IsGamePaused, Converter={StaticResource gamePausedOpacityConvert}}"
                        Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}">
                    </Image>
                    <Label
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalOptions="Center"
                        VerticalOptions="Center"
                        FontSize="36"
                        Text="{Binding CurrentCard.Exercise}"
                        Opacity="{Binding IsGamePaused, Converter={StaticResource inverseBoolConverter}}"/>
                    <Label
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalOptions="Center"
                        VerticalOptions="Center"
                        FontSize="36"
                        Text="{Binding GameState, Converter={StaticResource gameStateLabelTextConvert}}"/>
                </Grid>
            </rf:Frame2>
            <Button Grid.Row="2"
                Text="{Binding IsGamePaused, Converter={StaticResource gamePausedTextConvert}}"
                HorizontalOptions="FillAndExpand"
                Margin="20, 10, 20, 10"
                Command="{Binding PauseButtonPressedCommand}"
                IsEnabled="{Binding IsGameRunning}">
                <Button.Triggers>
                    <Trigger TargetType="Button"
                             Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </Trigger>
                </Button.Triggers>
            </Button>
            <Button Grid.Row="3"
                Text="Finish Workout"
                HorizontalOptions="FillAndExpand"
                Margin="20, 10, 20, 10"
                Command="{Binding FinishButtonPressedCommand}"
                IsVisible="{Binding IsGamePaused}"
                Opacity="{Binding IsGameRunning}">
                <Button.Triggers>
                    <Trigger TargetType="Button"
                             Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </Trigger>
                </Button.Triggers>
            </Button>
        </Grid>
    </ContentPage.Content>
</ContentPage>