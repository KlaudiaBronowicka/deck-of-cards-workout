<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="DeckOfCards.Views.WorkoutPage"
             xmlns:converters="clr-namespace:DeckOfCards.Converters"
             xmlns:utility="clr-namespace:DeckOfCards.Utility;assembly=DeckOfCards"
             utility:ViewModelLocator.AutoWireViewModel="True"
             xmlns:skiaforms="clr-namespace:SkiaSharp.Views.Forms;assembly=SkiaSharp.Views.Forms"
             xmlns:controls="clr-namespace:DeckOfCards.Controls;assembly=DeckOfCards"
             NavigationPage.HasNavigationBar="False"
             xmlns:sh="http://sharpnado.com">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:SecondsToTimeConverter x:Key="timeConvert" />
            <converters:CardSymbolToImageConverter x:Key="cardSymbolImageConvert" />
            <converters:BoolToValueConverter x:Key="gamePausedTextConvert" x:TypeArguments="x:String" TrueValue="RESUME" FalseValue="PAUSE"  />
            <converters:InverseBoolConverter x:Key="inverseBoolConverter" />
            <converters:CardNumberToLabelConverter x:Key="cardNumberToLabelConverter" />
            <converters:CardSymbolToColorConverter x:Key="cardSymbolToColorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid
            VerticalOptions="FillAndExpand"
            HorizontalOptions="FillAndExpand"
            RowSpacing="0"
            BackgroundColor="{StaticResource Primary}">
             <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /> <!-- Top bar -->
                    <RowDefinition Height="*" /> <!-- Card view -->
                    <RowDefinition Height="150" /> <!-- Buttons -->
                    <RowDefinition Height="50" /> <!-- Ad banner-->
                </Grid.RowDefinitions>

            <!-- Gradient background -->
             <skiaforms:SKCanvasView
                 Grid.Row="0"
                 Grid.Column="0"
                 Grid.RowSpan="4"
                 x:Name="canvasView"
                 PaintSurface="OnCanvasViewPaintSurface" />

            <!-- Top bar -->
            <Grid Grid.Row="0" >
            <Grid.Padding>
                <OnPlatform x:TypeArguments="Thickness">
                    <On Platform="iOS" Value="0,20,0,0" />
                </OnPlatform>
            </Grid.Padding>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                 <Label Grid.Column="0"
                    HorizontalTextAlignment="Start"
                    Margin="20, 20, 0, 0"
                    Style="{StaticResource TopBarLabelStyle}">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding CurrentCardIndex}" />
                            <Span Text="/" />
                            <Span Text="{Binding NumberOfCards}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <ImageButton
                    x:Name="HelpIcon"
                    BackgroundColor="Transparent"
                    Grid.Column="1"
                    Source="HelpIcon"
                    Style="{StaticResource HelpIconStyle}"
                    Clicked="HelpButtonClicked">
                </ImageButton>
                <Label
                    Grid.Column="2"
                    HorizontalTextAlignment="End"
                    Text="{Binding Seconds, Converter={StaticResource timeConvert}}"
                    Margin="0, 20, 20, 0"
                    Style="{StaticResource TopBarLabelStyle}">
                </Label>
            </Grid>

            <!-- Card view -->
            <sh:Shadows
                Grid.Row="1"
                Margin="40, 20, 40, 30"
                x:Name="CardShadow"
                CornerRadius="24"
                Shades="{sh:SingleShade Offset='5, 10', Opacity=0.6, Color=Black}">
                <Frame
                    x:Name="CardView"
                    HasShadow="False"
                    BackgroundColor="{StaticResource Light}"
                    CornerRadius="16"
                    Padding="0"
                    HorizontalOptions="FillAndExpand"
                    VerticalOptions="FillAndExpand"
                    >

                    <Frame.GestureRecognizers>
                        <TapGestureRecognizer Tapped="CardTappedEvent"/>
                        <SwipeGestureRecognizer Direction="Left" Swiped="CardSwipedEvent"/>
                    </Frame.GestureRecognizers>

                    <Grid RowDefinitions="auto, auto, *, auto, auto" ColumnDefinitions="auto, *, auto">
                        <Frame
                            x:Name="cardCoverImage"
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.RowSpan="5"
                            Grid.ColumnSpan="3"
                            Style="{StaticResource CardSizeStyle}"
                            BackgroundColor="{StaticResource Light}"
                            CornerRadius="12"
                            Margin="10"
                            Padding="0"
                            HasShadow="False"
                            IsVisible="{Binding IsGameRunning, Converter={StaticResource inverseBoolConverter}}">
                             <Image
                                Aspect="AspectFill"
                                Source="card.png"/>
                        </Frame>

                        <Label
                            x:Name="TopLeftCardNumber"
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.RowSpan="3"
                            VerticalOptions="Start"
                            Text="{Binding CurrentCard.Value, Converter={StaticResource cardNumberToLabelConverter}}"
                            Style="{StaticResource CardNumberLabelStyle}"
                            Margin="20, 15, 0, 0"
                            TextColor="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolToColorConverter}}"/>
                        <Image
                            x:Name="TopLeftCardSymbol"
                            Style="{StaticResource CardSymbolImageStyle}"
                            Grid.Row="1"
                            Grid.Column="0"
                            Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}"
                            Margin="20, 0, 0, 0">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image" Binding="{Binding CurrentCard.Symbol}"
                                            Value="Joker">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>

                        <Label
                            x:Name="TopRightCardNumber"
                            Grid.Row="0"
                            Grid.Column="2"
                            VerticalOptions="Start"
                            Text="{Binding CurrentCard.Value, Converter={StaticResource cardNumberToLabelConverter}}"
                            Style="{StaticResource CardNumberLabelStyle}"
                            Margin="0, 15, 20, 0"
                            TextColor="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolToColorConverter}}">
                             <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding CurrentCard.Symbol}" Value="Joker">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Image
                            x:Name="TopRightCardSymbol"
                            Style="{StaticResource CardSymbolImageStyle}"
                            Grid.Row="1"
                            Grid.Column="2"
                            Margin="0, 00, 20, 0"
                            Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}">
                             <Image.Triggers>
                                <DataTrigger TargetType="Image" Binding="{Binding CurrentCard.Symbol}"
                                            Value="Joker">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>

                        <Label
                            x:Name="BottomLeftCardNumber"
                            Grid.Row="4"
                            Grid.Column="0"
                            VerticalOptions="End"
                            Text="{Binding CurrentCard.Value, Converter={StaticResource cardNumberToLabelConverter}}"
                            Rotation="180"
                            Style="{StaticResource CardNumberLabelStyle}"
                            Margin="20, 0, 0, 15"
                            TextColor="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolToColorConverter}}">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding CurrentCard.Symbol}" Value="Joker">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </Label.Triggers>
                            </Label>
                        <Image
                            x:Name="BottomLeftCardSymbol"
                            Style="{StaticResource CardSymbolImageStyle}"
                            Grid.Row="3"
                            Grid.Column="0"
                            Margin="20, 0, 0, 0"
                            Rotation="180"
                            Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}">
                             <Image.Triggers>
                                <DataTrigger TargetType="Image" Binding="{Binding CurrentCard.Symbol}"
                                            Value="Joker">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>

                        <Label
                            x:Name="BottomRightCardNumber"
                            Grid.Row="2"
                            Grid.Column="2"
                            Grid.RowSpan="3"
                            VerticalOptions="End"
                            Text="{Binding CurrentCard.Value, Converter={StaticResource cardNumberToLabelConverter}}"
                            Rotation="180"
                            Margin="0, 0, 20, 15"
                            Style="{StaticResource CardNumberLabelStyle}"
                            TextColor="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolToColorConverter}}" />
                        <Image
                            x:Name="BottomRightCardSymbol"
                            Style="{StaticResource CardSymbolImageStyle}"
                            Grid.Row="3"
                            Grid.Column="2"
                            Margin="0, 0, 20, 0"
                            Rotation="180"
                            Source="{Binding CurrentCard.Symbol, Converter={StaticResource cardSymbolImageConvert}}">
                             <Image.Triggers>
                                <DataTrigger TargetType="Image" Binding="{Binding CurrentCard.Symbol}"
                                            Value="Joker">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>

                        <Label
                            x:Name="ExerciseLabel"
                            Text="{Binding CurrentCard.Exercise}"
                            Style="{StaticResource CardLabelStyle}"/>

                        <Label
                            x:Name="GameResumeLabel"
                            Text="Press to resume"
                            Style="{StaticResource CardLabelStyle}"
                            Opacity="0"/>
                        <Label
                            x:Name="ResultsLabel"
                            Style="{StaticResource CardLabelStyle}"
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            FontFamily="Nunito-Regular"
                            HorizontalTextAlignment="Center"
                            Margin="20, 0"
                            Opacity="0"
                            TextColor="{StaticResource Primary}"
                            FontSize="24"
                            HorizontalOptions="Center"
                            VerticalOptions="Center"
                            >
                             <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="Congratulations!&#x0a;" />
                                    <Span Text="You finished your workout in " />
                                    <Span x:Name="ResultsLabelTimeSpan" TextColor="{StaticResource Accent}" FontFamily="Nunito-Bold" FontSize="24" />
                                    <Span Text="!" />
                                </FormattedString>
                            </Label.FormattedText>
                            </Label>

                    </Grid>
                </Frame>
            </sh:Shadows>
            <Label
                x:Name="StartGameLabel"
                Grid.Row="2"
                Text="Tap the card to start"
                Style="{StaticResource StartGameLabelStyle}"
                HorizontalOptions="FillAndExpand"
                HorizontalTextAlignment="Center"
                TextColor="{StaticResource Light}"
                Opacity="0.5"/>


            <!-- Buttons -->
            <Grid
                Grid.Row="2"
                x:Name="Buttons"
                HorizontalOptions="FillAndExpand"
                HeightRequest="200"
                BackgroundColor="Transparent"
                IsEnabled="False"
                Opacity="0"
                ColumnDefinitions="*, *"
                >

                <controls:DOCButton
                    x:Name="FinishButton"
                    Margin="40, 20, 10, 40"
                    Text="QUIT"
                    ButtonCommand="{Binding FinishButtonPressedCommand}" />

                <controls:DOCButton
                    Grid.Column="1"
                    x:Name="PauseButton"
                    Margin="10, 20, 40, 40"
                    Text="{Binding IsGamePaused, Converter={StaticResource gamePausedTextConvert}}"
                    ButtonCommand="{Binding PauseButtonPressedCommand}" />

            </Grid>

            <controls:AdControlView Grid.Row="3" Style="{StaticResource AdBannerStyle}" HorizontalOptions="FillAndExpand"  />


        </Grid>
    </ContentPage.Content>
</ContentPage>